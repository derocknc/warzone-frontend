{"ast":null,"code":"var _jsxFileName = \"/Users/dstutts/side/wz/warzone-frontend/components/BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Chart from 'chart.js';\nimport { useEffect, useState, useRef } from 'react';\nimport \"../styles/styles.scss\";\nexport default function BarChart(props) {\n  _s();\n\n  var playerData = props.playerData,\n      statType = props.statType,\n      type = props.type,\n      label = props.label;\n\n  var getNames = function getNames() {\n    return playerData.map(function (player) {\n      return player.playerName;\n    });\n  };\n\n  var chartRef = useRef(null);\n\n  var getData = function getData(statType) {\n    return playerData.map(function (player) {\n      return player.br[statType];\n    });\n  };\n\n  useEffect(function () {\n    var chartEl = chartRef.current.getContext(\"2d\");\n    var graphHeight = chartEl.canvas.height;\n    var gradientLine = chartEl.createLinearGradient(0, 0, 0, graphHeight);\n    gradientLine.addColorStop(0, \"rgb(75, 255, 30, 1.0)\");\n    gradientLine.addColorStop(0.25, \"rgb(75, 255, 30, 0.25)\");\n    gradientLine.addColorStop(1, \"rgb(75, 255, 30, 0.05)\");\n\n    if (playerData) {\n      new Chart(chartEl, {\n        type: type,\n        data: {\n          labels: getNames(),\n          datasets: [{\n            label: label,\n            data: getData(statType),\n            backgroundColor: gradientLine,\n            borderColor: 'rgb(75, 255, 30, 1.0)',\n            borderWidth: '1',\n            hoverBorderWidth: '2'\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }],\n            yAxes: [{\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                min: 0\n              }\n            }]\n          },\n          legend: {\n            labels: {\n              fontColor: '#ffffff',\n              boxWidth: 0\n            }\n          }\n        }\n      });\n    }\n  }, [playerData, statType]);\n  return __jsx(\"canvas\", {\n    id: statType,\n    ref: chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(BarChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/dstutts/side/wz/warzone-frontend/components/BarChart.js"],"names":["Chart","useEffect","useState","useRef","BarChart","props","playerData","statType","type","label","getNames","map","player","playerName","chartRef","getData","br","chartEl","current","getContext","graphHeight","canvas","height","gradientLine","createLinearGradient","addColorStop","data","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBorderWidth","options","responsive","scales","xAxes","gridLines","display","yAxes","ticks","min","legend","fontColor","boxWidth"],"mappings":"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","sourcesContent":["import Chart from 'chart.js';\nimport { useEffect, useState, useRef } from 'react';\nimport \"../styles/styles.scss\"\n\nexport default function BarChart(props) {\n\nconst { playerData, statType, type, label } = props;\n\nconst getNames = () => {\n  return playerData.map(player => player.playerName);\n}\n\nconst chartRef = useRef(null);\n\nconst getData = (statType) => {\n  return playerData.map(player => player.br[statType]);\n}\n\nuseEffect(() => {\n  const chartEl = chartRef.current.getContext(\"2d\");\n\n  const { height: graphHeight } = chartEl.canvas;\n\n  let gradientLine = chartEl\n    .createLinearGradient(0, 0, 0, graphHeight);\n      gradientLine.addColorStop(0, \"rgb(75, 255, 30, 1.0)\");\n      gradientLine.addColorStop(0.25, \"rgb(75, 255, 30, 0.25)\");\n      gradientLine.addColorStop(1, \"rgb(75, 255, 30, 0.05)\");\n\n  if (playerData) {\n    new Chart(chartEl, {\n      type: type,\n      data: {\n        labels: getNames(),\n        datasets: [\n          {\n            label: label,\n            data: getData(statType),\n            backgroundColor: gradientLine,\n            borderColor: 'rgb(75, 255, 30, 1.0)',\n            borderWidth: '1',\n            hoverBorderWidth: '2',\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          xAxes: [{\n              gridLines: {\n                  display: false,\n              }\n          }],\n          yAxes: [{\n              gridLines: {\n                  display: false,\n              },\n              ticks: {\n                min: 0\n              }\n          }]\n        },\n        legend: {\n          labels: {\n            fontColor: '#ffffff',\n            boxWidth: 0\n          }\n        }\n      }\n    });\n  }\n}, [playerData, statType]);\n\n  return (\n    <canvas\n      id={statType}\n      ref={chartRef}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}